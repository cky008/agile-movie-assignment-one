{"version":3,"file":"static/js/1897.238d403c.chunk.js","mappings":"wRAcMA,GAAeC,EAAAA,EAAAA,OAAK,kBAAM,uDAAN,IACpBC,GAAeD,EAAAA,EAAAA,OAAK,kBAAM,uDAAN,IAGpBE,EAAO,CACTC,QAAS,OACTC,eAAgB,SAChBC,SAAU,OACVC,UAAW,OACXC,QAAS,IACTC,OAAQ,GAENC,EAAO,CAAED,OAAQ,IA6FvB,UA3FqB,SAAC,GAAuB,IAArBE,EAAoB,EAApBA,MAAQC,EAAY,EAAZA,MAC9B,GAAoCC,EAAAA,EAAAA,WAAS,GAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAqDE,EAAAA,EAAAA,UACnD,CAAC,UAAW,CAAEF,GAAIA,IAClBG,EAAAA,IAFYC,EAAd,EAAQC,KAAeC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,UAAWC,EAAzC,EAAyCA,QAMzC,OAAID,GACQ,SAAC,EAAAE,SAAD,CAAUC,UAAU,+CAApB,UAAkD,SAAC,UAAD,MAG1DF,GACK,wBAAKF,EAAMK,WAIlB,iCACE,SAAC,IAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAnC,uBAIA,SAAC,IAAD,CAAYD,QAAQ,KAAKC,UAAU,IAAnC,SACGlB,EAAMmB,YAGT,UAAC,IAAD,CACED,UAAU,KACVE,IAAE,UAAM5B,GAFV,WAIE,yBACE,SAAC,IAAD,CAAM6B,MAAM,SAASD,IAAE,UAAMrB,GAAOuB,MAAM,cAE3CtB,EAAMuB,OAAOC,KAAI,SAACC,GAAD,OAChB,yBACE,SAAC,IAAD,CAAMJ,MAAOI,EAAEC,KAAMN,IAAE,UAAMrB,MADtB0B,EAAEC,KADK,QAMpB,UAAC,IAAD,CAAOR,UAAU,KAAKE,IAAE,UAAM5B,GAA9B,WACE,SAAC,IAAD,CAAMmC,MAAM,SAAC,IAAD,IAAoBN,MAAK,UAAKrB,EAAM4B,QAAX,YACrC,SAAC,IAAD,CACED,MAAM,SAAC,IAAD,IACNN,MAAK,UAAKrB,EAAM6B,QAAQC,qBAE1B,SAAC,IAAD,CACEH,MAAM,SAAC,IAAD,IACNN,MAAK,UAAKrB,EAAM+B,aAAX,aAA4B/B,EAAMgC,eAEzC,SAAC,IAAD,CAAMX,MAAK,oBAAerB,EAAMiC,oBAElC,UAAC,IAAD,CACEf,UAAU,KACVE,IAAE,UAAM5B,GAFV,WAIE,yBACE,SAAC,IAAD,CAAM6B,MAAM,uBAAuBD,IAAE,UAAMrB,GAAOuB,MAAM,cAEzDtB,EAAMkC,qBAAqBV,KAAI,SAACW,GAAD,OAC9B,yBACE,SAAC,IAAD,CAAMd,MAAOc,EAAGT,KAAMN,IAAE,UAAMrB,MADvBoC,EAAGT,KADkB,QAMlC,mBACA,SAAC,EAAAZ,SAAD,CAAUC,UAAU,yCAApB,UACG,SAACxB,EAAD,CAAc6C,UAAanC,OAE9B,UAAC,IAAD,CACEqB,MAAM,YACNL,QAAQ,WACRoB,QAAS,kBAAKjC,GAAc,EAAnB,EACTgB,GAAI,CACFkB,SAAU,QACVC,OAAQ,MACRC,MAAO,OAPX,WAUE,SAAC,IAAD,IAVF,cAaA,SAAC,KAAD,CAAQC,OAAO,MAAMC,KAAMvC,EAAYwC,QAAS,kBAAMvC,GAAc,EAApB,EAAhD,UACE,SAAC,EAAAU,SAAD,CAAUC,UAAU,yCAApB,UACG,SAAC1B,EAAD,CAAcW,MAAOA,EAAOS,QAASA,UAK/C,C,mGClHc,SAASmC,IACtB,OACE,iBAAKxB,GAAI,CACL3B,QAAS,OACTC,eAAgB,SAChB,YAAa,CACXmD,WAAY,QAJlB,WAME,SAAC,IAAD,KACA,SAAC,IAAD,MAGL,C","sources":["components/movieDetails/index.js","components/spinner/index.js"],"sourcesContent":["import React, { useState, lazy, Suspense } from \"react\";\nimport { useQuery } from \"react-query\";\nimport Drawer from \"@mui/material/Drawer\";\nimport Chip from \"@mui/material/Chip\";\nimport Paper from \"@mui/material/Paper\";\nimport AccessTimeIcon from \"@mui/icons-material/AccessTime\";\nimport MonetizationIcon from \"@mui/icons-material/MonetizationOn\";\nimport StarRate from \"@mui/icons-material/StarRate\";\nimport NavigationIcon from \"@mui/icons-material/Navigation\";\nimport Fab from \"@mui/material/Fab\";\nimport Typography from \"@mui/material/Typography\";\nimport { getMovieReviews } from \"../../api/tmdb-api\";\nimport Spinner from '../spinner'\nimport { useParams } from 'react-router-dom';\nconst MovieReviews = lazy(() => import(\"../movieReviews\"));\nconst MovieCredits = lazy(() => import(\"../movieCredits\"));\n\n\nconst root = {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    listStyle: \"none\",\n    padding: 1.5,\n    margin: 0,\n};\nconst chip = { margin: 0.5 };\n\nconst MovieDetails = ({ movie , casts }) => {\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const { id } = useParams();\n  const { data: reviews, error, isLoading, isError } = useQuery(\n    [\"reviews\", { id: id }],\n    getMovieReviews\n  );\n  // console.log(reviews)\n\n  if (isLoading) {\n    return    <Suspense fallback={<h1>Loading Componment</h1>}>{<Spinner />}</Suspense>;\n  }\n\n  if (isError) {\n    return <h1>{error.message}</h1>;\n  }\n\n  return (\n    <>\n      <Typography variant=\"h5\" component=\"h3\">\n        Overview\n      </Typography>\n\n      <Typography variant=\"h6\" component=\"p\">\n        {movie.overview}\n      </Typography>\n\n      <Paper \n        component=\"ul\" \n        sx={{...root}}\n      >\n        <li>\n          <Chip label=\"Genres\" sx={{...chip}} color=\"primary\" />\n        </li>\n        {movie.genres.map((g) => (\n          <li key={g.name}>\n            <Chip label={g.name} sx={{...chip}} />\n          </li>\n        ))}\n      </Paper>\n      <Paper component=\"ul\" sx={{...root}}>\n        <Chip icon={<AccessTimeIcon />} label={`${movie.runtime} min.`} />\n        <Chip\n          icon={<MonetizationIcon />}\n          label={`${movie.revenue.toLocaleString()}`}\n        />\n        <Chip\n          icon={<StarRate />}\n          label={`${movie.vote_average} (${movie.vote_count}`}\n        />\n        <Chip label={`Released: ${movie.release_date}`} />\n      </Paper>\n      <Paper \n        component=\"ul\" \n        sx={{...root}}\n      >\n        <li>\n          <Chip label=\"Production Countries\" sx={{...chip}} color=\"primary\" />\n        </li>\n        {movie.production_countries.map((pc) => (\n          <li key={pc.name}>\n            <Chip label={pc.name} sx={{...chip}} />\n          </li>\n        ))}\n      </Paper>\n      <br/>\n      <Suspense fallback={<h1>Loading page</h1>}>\n        {<MovieCredits castsList = {casts}/>}\n      </Suspense>\n      <Fab\n        color=\"secondary\"\n        variant=\"extended\"\n        onClick={() =>setDrawerOpen(true)}\n        sx={{\n          position: 'fixed',\n          bottom: '1em',\n          right: '1em'\n        }}\n      >\n        <NavigationIcon />\n        Reviews\n      </Fab>\n      <Drawer anchor=\"top\" open={drawerOpen} onClose={() => setDrawerOpen(false)}>\n        <Suspense fallback={<h1>Loading page</h1>}>\n          {<MovieReviews movie={movie} reviews={reviews} />}\n        </Suspense>\n      </Drawer>\n      </>\n  );\n};\n\nexport default MovieDetails ;  ","import React from 'react';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nexport default function CircularIndeterminate() {\n  return (\n    <div sx={{\n        display: 'flex',\n        justifyContent: \"center\",\n        '& > * + *': {\n          marginLeft: '2em',\n        }}}>\n      <CircularProgress />\n      <CircularProgress />\n    </div>\n  );\n}"],"names":["MovieReviews","lazy","MovieCredits","root","display","justifyContent","flexWrap","listStyle","padding","margin","chip","movie","casts","useState","drawerOpen","setDrawerOpen","id","useParams","useQuery","getMovieReviews","reviews","data","error","isLoading","isError","Suspense","fallback","message","variant","component","overview","sx","label","color","genres","map","g","name","icon","runtime","revenue","toLocaleString","vote_average","vote_count","release_date","production_countries","pc","castsList","onClick","position","bottom","right","anchor","open","onClose","CircularIndeterminate","marginLeft"],"sourceRoot":""}