{"version":3,"file":"static/js/4893.52ebb993.chunk.js","mappings":"kKAKMA,GAAeC,EAAAA,EAAAA,OAAK,kBAAM,8FAAN,IACpBC,GAAeD,EAAAA,EAAAA,OAAK,kBAAM,iEAAN,IACpBE,GAAUF,EAAAA,EAAAA,OAAK,kBAAM,uDAAN,IAiDrB,UA9CkB,SAACG,GACjB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAmDE,EAAAA,EAAAA,UACjD,CAAC,QAAS,CAAEF,GAAIA,IAChBG,EAAAA,IAFYC,EAAd,EAAQC,KAAaC,EAArB,EAAqBA,MAAOC,EAA5B,EAA4BA,UAAWC,EAAvC,EAAuCA,QAKvC,GAAqDN,EAAAA,EAAAA,UACnD,CAAC,QAAS,CAAEF,GAAIA,IAChBS,EAAAA,IAFWC,EAAb,EAAOL,KAAaM,EAApB,EAAoBA,OAAQC,EAA5B,EAA4BA,WAAYC,EAAxC,EAAwCA,SAKxC,OAAIN,GACQ,SAAC,EAAAO,SAAD,CAAUC,UAAU,+CAApB,UAAkD,SAACjB,EAAD,MAG1DU,GACK,wBAAKF,EAAMU,UAGhBJ,GACQ,SAAC,EAAAE,SAAD,CAAUC,UAAU,+CAApB,UAAkD,SAACjB,EAAD,MAE1De,GACK,wBAAKF,EAAOK,WAInB,8BACGZ,GACC,+BACA,SAAC,EAAAU,SAAD,CAAUC,UAAU,yCAApB,UACG,SAAClB,EAAD,CAAcO,MAAOA,EAArB,UACC,SAAC,EAAAU,SAAD,CAAUC,UAAU,yCAApB,UACG,SAACpB,EAAD,CAAcS,MAAOA,EAAOM,MAAOA,aAM1C,sDAIP,C","sources":["pages/movieDetailsPage.js"],"sourcesContent":["import React, { lazy, Suspense } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { getMovie } from '../api/tmdb-api'\nimport { getMovieCredits } from '../api/tmdb-api'\nimport { useQuery } from \"react-query\";\nconst MovieDetails = lazy(() => import(\"../components/movieDetails/\"));\nconst PageTemplate = lazy(() => import(\"../components/templateMoviePage\"));\nconst Spinner = lazy(() => import(\"../components/spinner\"));\n\n\nconst MoviePage = (props) => {\n  const { id } = useParams();\n  const { data: movie, error, isLoading, isError } = useQuery(\n    [\"movie\", { id: id }],\n    getMovie\n  );\n\n  const {data: casts, error2, isLoading2, isError2 } = useQuery(\n    [\"casts\", { id: id }],\n    getMovieCredits\n  );\n  \n  if (isLoading) {\n    return    <Suspense fallback={<h1>Loading Componment</h1>}>{<Spinner />}</Suspense>;\n  }\n\n  if (isError) {\n    return <h1>{error.message}</h1>;\n  }\n\n  if (isLoading2) {\n    return    <Suspense fallback={<h1>Loading Componment</h1>}>{<Spinner />}</Suspense>;\n  }\n  if (isError2) {\n    return <h1>{error2.message}</h1>\n  }\n\n  return (\n    <>\n      {movie ? (\n        <>\n        <Suspense fallback={<h1>Loading page</h1>}>\n          {<PageTemplate movie={movie}>\n            <Suspense fallback={<h1>Loading page</h1>}>\n              {<MovieDetails movie={movie} casts={casts}/> }\n            </Suspense>\n          </PageTemplate>}\n        </Suspense>\n        </>\n      ) : (\n        <p>Waiting for movie details</p>\n      )}\n    </>\n  );\n};\n\nexport default MoviePage;"],"names":["MovieDetails","lazy","PageTemplate","Spinner","props","id","useParams","useQuery","getMovie","movie","data","error","isLoading","isError","getMovieCredits","casts","error2","isLoading2","isError2","Suspense","fallback","message"],"sourceRoot":""}