{"version":3,"file":"static/js/2400.8a29c4e6.chunk.js","mappings":"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","sources":["firebase.js","pages/resetPage.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport {\n  GoogleAuthProvider,\n  getAuth,\n  signInWithPopup,\n  signInWithEmailAndPassword,\n  createUserWithEmailAndPassword,\n  sendPasswordResetEmail,\n  signOut,\n} from \"firebase/auth\";\nimport {\n  getFirestore,\n  query,\n  getDocs,\n  collection,\n  where,\n  addDoc,\n} from \"firebase/firestore\";\n\n// import { getAnalytics } from \"firebase/analytics\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDCtdZkGHfVZrQnxX0zIZsL4fgYpWlynRE\",\n    authDomain: \"react-movie-assignment-one.firebaseapp.com\",\n    projectId: \"react-movie-assignment-one\",\n    storageBucket: \"react-movie-assignment-one.appspot.com\",\n    messagingSenderId: \"130217908744\",\n    appId: \"1:130217908744:web:9a445c78c2d4703a7bcfbd\",\n    measurementId: \"G-8X54425TET\"\n  };\n\n//Functions\nconst googleProvider = new GoogleAuthProvider();\nconst signInWithGoogle = async () => {\n  try {\n    const res = await signInWithPopup(auth, googleProvider);\n    const user = res.user;\n    const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user.uid));\n    const docs = await getDocs(q);\n    if (docs.docs.length === 0) {\n      await addDoc(collection(db, \"users\"), {\n        uid: user.uid,\n        name: user.displayName,\n        authProvider: \"google\",\n        email: user.email,\n      });\n    }\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst logInWithEmailAndPassword = async (email, password) => {\n  try {\n    await signInWithEmailAndPassword(auth, email, password);\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst registerWithEmailAndPassword = async (name, email, password) => {\n  try {\n    const res = await createUserWithEmailAndPassword(auth, email, password);\n    const user = res.user;\n    await addDoc(collection(db, \"users\"), {\n      uid: user.uid,\n      name,\n      authProvider: \"local\",\n      email,\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst sendPasswordReset = async (email) => {\n  try {\n    await sendPasswordResetEmail(auth, email);\n    alert(\"Password reset link sent!\");\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\n\nconst logout = () => {\n    return Promise.resolve(signOut(auth));\n  };\n\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst db = getFirestore(app);\nexport {\n  auth,\n  db,\n  signInWithGoogle,\n  logInWithEmailAndPassword,\n  registerWithEmailAndPassword,\n  sendPasswordReset,\n  logout,\n};","import React, { useEffect, useState, lazy, Suspense } from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { auth, sendPasswordReset } from \"../firebase\";\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nconst Spinner = lazy(() => import(\"../components/spinner\"));\n\n\nfunction Reset() {\n\n  const theme = createTheme();\n  const [email, setEmail] = useState(\"\");\n  const [user, error, isLoading, isError] = useAuthState(auth);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (isLoading) return;\n    if (user) navigate(\"/page1\");\n  }, [user, isLoading, navigate]);\n\n  if (isLoading) {\n    return       <Suspense fallback={<h1>Loading Componment</h1>}>{<Spinner />}</Suspense>;\n  }\n\n  if (isError) {\n    return <h1>{error.message}</h1>;\n  }\n\n  return (\n    <>\n    <ThemeProvider theme={theme}>\n      <Grid container component=\"main\" sx={{ height: '100vh' }}>\n        <CssBaseline />\n        <Grid\n          item\n          xs={false}\n          sm={4}\n          md={7}\n          sx={{\n            backgroundImage: 'url(https://source.unsplash.com/random)',\n            backgroundRepeat: 'no-repeat',\n            backgroundColor: (t) =>\n              t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n          }}\n        />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <Box\n            sx={{\n              my: 8,\n              mx: 4,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n            className=\"reset\"\n          >\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Reset Password\n            </Typography>\n            <Box component=\"form\" noValidate className=\"reset__container\" sx={{ mt: 1 }}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n                type=\"text\"\n                className=\"reset__textBox\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                placeholder=\"E-mail Address\"\n              />\n              <Button\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n                className=\"reset__btn\"\n                onClick={() => sendPasswordReset(email)}\n              >\n                Send password reset email\n              </Button>\n              <Grid container>\n                <Grid item>\n                  <Link to=\"/register\" variant=\"body2\">\n                    {\"Don't have an account? Sign Up\"}\n                  </Link>\n                </Grid>\n              </Grid>\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n    </>\n  );\n}\nexport default Reset;"],"names":["googleProvider","GoogleAuthProvider","signInWithGoogle","signInWithPopup","auth","res","user","q","query","collection","db","where","uid","getDocs","docs","length","addDoc","name","displayName","authProvider","email","console","error","alert","message","logInWithEmailAndPassword","password","signInWithEmailAndPassword","registerWithEmailAndPassword","createUserWithEmailAndPassword","sendPasswordReset","sendPasswordResetEmail","logout","Promise","resolve","signOut","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getAuth","getFirestore","Spinner","lazy","theme","createTheme","useState","setEmail","useAuthState","isLoading","isError","navigate","useNavigate","useEffect","Suspense","fallback","container","component","sx","height","item","xs","sm","md","backgroundImage","backgroundRepeat","backgroundColor","t","palette","mode","grey","backgroundSize","backgroundPosition","Paper","elevation","square","my","mx","display","flexDirection","alignItems","className","m","bgcolor","variant","noValidate","mt","margin","required","fullWidth","id","label","autoComplete","autoFocus","type","value","onChange","e","target","placeholder","mb","onClick","to"],"sourceRoot":""}