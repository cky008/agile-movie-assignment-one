{"version":3,"file":"static/js/6734.daa7a066.chunk.js","mappings":"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","sources":["components/reviewForm/index.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { MoviesContext } from \"../../contexts/moviesContext\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport MuiAlert from \"@mui/material/Alert\";\nimport { useNavigate } from \"react-router-dom\";\n\n\nconst ratings = [\n  {\n    value: 5,\n    label: \"Excellent\",\n  },\n  {\n    value: 4,\n    label: \"Good\",\n  },\n  {\n    value: 3,\n    label: \"Average\",\n  },\n  {\n    value: 2,\n    label: \"Poor\",\n  },\n  {\n    value: 0,\n    label: \"Terrible\",\n  },\n];\n\nconst styles = {\n    root: {\n      marginTop: 2,\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"left\",\n    },\n    form: {\n      width: \"100%\",\n      \"& > * \": {\n        marginTop: 2,\n      },\n    },\n    textField: {\n      width: \"40ch\",\n    },\n    submit: {\n      marginRight: 2,\n    },\n    snack: {\n      width: \"50%\",\n      \"& > * \": {\n        width: \"100%\",\n      },\n    },\n  };\n\n  const ReviewForm = ({ movie }) => {\n    const context = useContext(MoviesContext);\n    const [rating, setRating] = useState(3);\n    const [open, setOpen] = useState(false); \n    const navigate = useNavigate();\n\n    const handleSnackClose = (event) => {\n        setOpen(false);\n        navigate(\"/movies/favorites/page1\");\n      };\n  \n    const defaultValues = {\n      author: \"\",\n      review: \"\",\n      agree: false,\n      rating: \"3\",\n    };\n  \n    const {\n      control,\n      formState: { errors },\n      handleSubmit,\n      reset,\n    } = useForm(defaultValues);\n  \n    const handleRatingChange = (event) => {\n      setRating(event.target.value);\n    };\n  \n    const onSubmit = (review) => {\n        review.movieId = movie.id;\n        review.rating = rating;\n        // console.log(review);\n        context.addReview(movie, review);\n        setOpen(true); // NEW\n      };\n\n    return (\n        <Box component=\"div\" sx={styles.root}>\n          <Typography component=\"h2\" variant=\"h3\">\n            Write a review\n          </Typography>\n          <Snackbar\n        sx={styles.snack}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n        open={open}\n        onClose={handleSnackClose}\n      >\n        <MuiAlert\n          severity=\"success\"\n          variant=\"filled\"\n          onClose={handleSnackClose}\n        >\n          <Typography variant=\"h4\">\n            Thank you for submitting a review\n          </Typography>\n        </MuiAlert>\n      </Snackbar>\n          <form sx={styles.form} onSubmit={handleSubmit(onSubmit)} noValidate>\n            <Controller\n              name=\"author\"\n              control={control}\n              rules={{ required: \"Name is required\" }}\n              defaultValue=\"\"\n              render={({ field: { onChange, value } }) => (\n                <TextField\n                  sx={{ width: \"40ch\" }}\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  onChange={onChange}\n                  value={value}\n                  id=\"author\"\n                  label=\"Author's name\"\n                  name=\"author\"\n                  autoFocus\n                />\n              )}\n            />\n                    {errors.author && (\n          <Typography variant=\"h6\" component=\"p\">\n            {errors.author.message}\n          </Typography>\n        )}\n        <Controller\n          name=\"review\"\n          control={control}\n          rules={{\n            required: \"Review cannot be empty.\",\n            minLength: { value: 10, message: \"Review is too short\" },\n          }}\n          defaultValue=\"\"\n          render={({ field: { onChange, value } }) => (\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"review\"\n              value={value}\n              onChange={onChange}\n              label=\"Review text\"\n              id=\"review\"\n              multiline\n              minRows={10}\n            />\n          )}\n        />\n                {errors.review && (\n          <Typography variant=\"h6\" component=\"p\">\n            {errors.review.message}\n          </Typography>\n        )}\n\n        <Controller\n          control={control}\n          name=\"rating\"\n          render={({ field: { onChange, value } }) => (\n            <TextField\n              id=\"select-rating\"\n              select\n              variant=\"outlined\"\n              label=\"Rating Select\"\n              value={rating}\n              onChange={handleRatingChange}\n              helperText=\"Don't forget your rating\"\n            >\n              {ratings.map((option) => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.label}\n                </MenuItem>\n              ))}\n            </TextField>\n          )}\n        />\n\n        <Box sx={styles.buttons}>\n        <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            sx={styles.submit}\n          >\n            Submit\n          </Button>\n          <Button\n            type=\"reset\"\n            variant=\"contained\"\n            color=\"secondary\"\n            sx={styles.submit}\n            onClick={() => {\n              reset({\n                author: \"\",\n                content: \"\",\n              });\n            }}\n          >\n            Reset\n          </Button>\n        </Box>\n      </form>\n    </Box>\n  );\n};\n\nexport default ReviewForm;"],"names":["ratings","value","label","styles","root","marginTop","display","flexDirection","alignItems","form","width","textField","submit","marginRight","snack","movie","context","useContext","MoviesContext","useState","rating","setRating","open","setOpen","navigate","useNavigate","handleSnackClose","event","useForm","author","review","agree","control","errors","formState","handleSubmit","reset","handleRatingChange","target","component","sx","variant","anchorOrigin","vertical","horizontal","onClose","severity","onSubmit","movieId","id","addReview","noValidate","name","rules","required","defaultValue","render","field","onChange","margin","autoFocus","message","minLength","fullWidth","multiline","minRows","select","helperText","map","option","buttons","type","color","onClick","content"],"sourceRoot":""}